@page "/randomuser"
@inject IRandomUsers RandomUsers

@if(ViewModel != null)
{
    <div class="row">
        <div class="col-6">
            <Chart Labels="ViewModel.Genere.Labels" ChartType="Models.ChartType.Bar">
                <Series Values="ViewModel.Genere.Values"></Series>
            </Chart>
        </div>

        <div class="col-6">
            <Chart Labels="ViewModel.TotPerNazione.Labels" ChartType="Models.ChartType.Bar">
                <Series Values="ViewModel.TotPerNazione.Values"></Series>
            </Chart>
        </div>
    </div>


    <div class="row">
    @foreach (Utente utente in ViewModel.Utenti)
    {
        <div class="col-3 mb-3">
            <MyCard Title="@($"{utente.name.first} {utente.name.last}")" Url="@utente.picture.medium" />
        </div>
    }
    </div>
}

@code {
    RandomUserViewModel ViewModel = new RandomUserViewModel();

    // List<Utente>? Utenti;
    // List<string>? Labels = new List<string>{"Maschi", "Femmine"};
    // List<string>? NationsLabels = new();
    // List<double> Values = new();
    // List<double> NationsValues = new();

    protected override async Task OnInitializedAsync()
    {
        ViewModel = await RandomUsers.GetUsersAsync(23);
        // Utenti = ViewModel.Utenti.ToList();

        // Values.Add(Utenti?.Where(x => x.gender == "male").Count() ?? 0);
        // Values.Add(Utenti?.Where(x => x.gender == "female").Count() ?? 0);

        // NationsLabels = Utenti?.Select(x => x.location.country).Distinct().ToList() ?? new();

        // foreach (var nazione in NationsLabels)
        // {
        //     NationsValues.Add(Utenti?.Where(x => x.location.country == nazione).Count() ?? 0);
        // }

    }
}
